<launch>
    <!-- Launch file to start services related to openmv cameras.
        Calls by clients should be performed to camera_wrapper. The other
        services are called internally and aren't mean to be called directly.
    -->
    
    <!-- Set arguments -->
    <arg name="rpc_path" default="$(find openmv_camera)/scripts"/>
    <arg name="portLeft" default="/dev/port3"/>
    <arg name="portRight" default="/dev/port4"/>
    <arg name="debug" default="true"/>
    <arg name="debug_image" default="false"/>

    <!-- Launch left camera service -->
    <node name="camera_service_left" pkg="openmv_camera" type="camera_controller.py" respawn="true" output="screen">
        <param name="debug" value="$(arg debug)"/>
        <param name="debug_image" value="$(arg debug_image)"/>
        <param name="port" value="$(arg portLeft)"/>
        <param name="direction" value="left"/>
        <param name="working_dir" value="$(find openmv_camera)/scripts/datasets"/>
        <env name="PYTHONPATH" value="$(eval arg('rpc_path') + ':' + optenv('PYTHONPATH'))"/>
    </node>

    <!-- Launch right camera service -->
    <node name="camera_service_right" pkg="openmv_camera" type="camera_controller.py" respawn="true" output="screen">
        <param name="debug" value="$(arg debug)"/>
        <param name="debug_image" value="$(arg debug_image)"/>
        <param name="port" value="$(arg portRight)"/>
        <param name="direction" value="right"/>
        <param name="working_dir" value="$(find openmv_camera)/scripts/datasets"/>
        <env name="PYTHONPATH" value="$(eval arg('rpc_path') + ':' + optenv('PYTHONPATH'))"/>
    </node>
    
    <!-- Launch camera wrapper -->
    <node name="camera_wrapper" pkg="openmv_camera" type="camera_wrapper.py" respawn="true" output="screen">
        <param name="debug" value="$(arg debug)"/>
    </node>

</launch>