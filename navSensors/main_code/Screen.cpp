#include "Screen.h"
#include "CommonK.h"

Screen::Screen()
{
}

void Screen::init()
{

    if (!screen.begin(i2c_Address, true))
    {
        if (!CK::kusingROS)
            Serial.println("ERROR Screen");
    }
    screen.clearDisplay();
    screen.setTextSize(1);
    screen.setTextColor(SH110X_WHITE);
    screen.setCursor(0, 0);
    screen.display();
}

void Screen::setStyle()
{
    // Implement specific style if needed.
}

void Screen::display(String message, int x, int y)
{
    if (ignoreAll)
        return;
    y *= 7;
    if (!CK::debugOled)
        return;
    resetLine(y);

    screen.setCursor(x, y);
    screen.println(message);
    screen.display();
}

void Screen::display(String message, double num, String divider, int x, int y)
{
    String newMessage = message + divider + String(num);
    display(newMessage, x, y);
}

void Screen::display(double num, String message, String divider, int x, int y)
{
    String newMessage = String(num) + divider + message;
    display(newMessage, x, y);
}

void Screen::resetLine(int start)
{
    int min = start;
    int max = min + 7;
    for (int y = min; y < max; y++)
    {
        for (int x = 0; x < 127; x++)
        {
            screen.drawPixel(x, y, SH110X_BLACK);
        }
    }
}

void Screen::RBRGS()
{

    ignoreAll = true;
    screen.clearDisplay();
    /*
    const unsigned char rbrgs[] PROGMEM = {
        0x00, 0x00, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0xdf, 0xe0, 0x00, 0x00, 0x03, 0xfb, 0x80, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xf0, 0x00, 0x00, 0x0f, 0xfa, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x0e, 0x1f, 0xe4, 0x00, 0x00, 0x27, 0xf8, 0x70, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x1f, 0x87, 0xde, 0x00, 0x00, 0x7b, 0xf1, 0xf8, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x1f, 0xe3, 0xbf, 0x00, 0x00, 0xfd, 0xc7, 0xf8, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x6f, 0xf1, 0x7f, 0xc0, 0x01, 0xfe, 0x8f, 0xf6, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xff, 0xf8, 0xff, 0xe0, 0x03, 0xff, 0x1f, 0xf7, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x7f, 0xc0, 0x03, 0xfe, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x3f, 0x70, 0x0e, 0xfc, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x1e, 0xf8, 0x1f, 0x78, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x9d, 0xff, 0xff, 0xb9, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xf1, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x04, 0x7f, 0xff, 0xc7, 0xf8, 0x1f, 0xf3, 0xff, 0xfe, 0x20, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x07, 0x0f, 0xff, 0xe7, 0xf8, 0x1f, 0xe7, 0xff, 0xf0, 0xe0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x07, 0xff, 0xfb, 0xe7, 0xf0, 0x0f, 0xe7, 0xdf, 0xff, 0xe0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x07, 0xff, 0xf3, 0xf3, 0xf0, 0x0f, 0xc7, 0xcf, 0xff, 0xe0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x07, 0xff, 0xc1, 0xb3, 0xe0, 0x07, 0xcf, 0x83, 0xff, 0xf0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x07, 0xff, 0x80, 0xd3, 0xc0, 0x03, 0xc9, 0x81, 0xff, 0xe0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0xc1, 0x00, 0x00, 0xc3, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x08, 0x3e, 0x00, 0x60, 0x00, 0x00, 0x06, 0x00, 0x7e, 0x10, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x0f, 0xbe, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x3d, 0xf0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x38, 0x00, 0x00, 0x1c, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x03, 0xf8, 0x03, 0x70, 0xc0, 0x00, 0x0e, 0xe0, 0x1f, 0xc0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x0c, 0xf8, 0x3f, 0x61, 0xe0, 0x00, 0x06, 0xfc, 0x1f, 0x10, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x0f, 0x18, 0x7f, 0x61, 0xe0, 0x00, 0x06, 0xfe, 0x1c, 0x70, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x07, 0xf8, 0x3f, 0x61, 0xe0, 0x00, 0x0e, 0xf8, 0x1f, 0xf0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x07, 0xf8, 0x03, 0x70, 0x00, 0x00, 0x0e, 0xc0, 0x1f, 0xe0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x07, 0xf8, 0x00, 0x38, 0x00, 0x00, 0x1c, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x07, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x06, 0x00, 0x00, 0x60, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x05, 0xfc, 0x00, 0x06, 0x00, 0x00, 0x60, 0x00, 0x3f, 0xa0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x06, 0xfc, 0x00, 0x03, 0x00, 0x00, 0xc0, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x02, 0xfc, 0x00, 0x03, 0x00, 0x00, 0xc0, 0x00, 0x3f, 0x60, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x03, 0x7e, 0x00, 0x01, 0x80, 0x01, 0x80, 0x00, 0x7e, 0xc0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x03, 0xaf, 0x00, 0x01, 0x80, 0x01, 0x80, 0x00, 0xf5, 0xc0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x01, 0xdf, 0x80, 0x00, 0xc0, 0x01, 0x00, 0x01, 0xfb, 0xc0, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x01, 0xf7, 0xc0, 0x80, 0xc3, 0xc3, 0x01, 0x03, 0xef, 0x80, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xf8, 0xe3, 0x80, 0xcf, 0xf3, 0x01, 0xc7, 0x1f, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x7f, 0xfe, 0x01, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x7f, 0xfe, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x00, 0x3f, 0xfc, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x0f, 0xfe, 0x00, 0x3b, 0xdc, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x3b, 0xdc, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x1e, 0x79, 0xf3, 0xdf, 0x3c, 0xf7, 0x9e, 0x78, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x1b, 0x6d, 0xb6, 0xdf, 0x36, 0xcd, 0xfe, 0xfc, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x1b, 0x6d, 0xb6, 0xdb, 0x36, 0xcd, 0xb7, 0xe0, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x1e, 0x6d, 0xe6, 0xdf, 0x3c, 0xec, 0x37, 0xf8, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x1e, 0x6d, 0xf6, 0xdf, 0x3c, 0xcf, 0xf7, 0x38, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x1b, 0x6d, 0xb6, 0xdb, 0x36, 0xcd, 0xf7, 0x5c, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x1b, 0x7d, 0xf7, 0xdb, 0x36, 0xef, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x1b, 0x79, 0xe3, 0xdb, 0x36, 0xf7, 0x9e, 0x78, 0x00, 0x00, 0x00, 0x00};
        */
    //screen.drawBitmap(0, 0, rbrgs, 128, 64, SH110X_WHITE);
    screen.display();
}

void Screen::resetScreen()
{
    screen.clearDisplay();
}

void Screen::testdraw()
{
    for (int y = 0; y < 5; y++)
    {
        for (int x = 0; x < 127; x++)
        {
            screen.drawPixel(x, y + 50, SH110X_WHITE);
        }
    }

    screen.display();

    delay(5000);
    for (int y = 2; y < 3; y++)
    {
        for (int x = 0; x < 127; x++)
        {
            screen.drawPixel(x, y + 50, SH110X_BLACK);
        }
    }
    screen.display();
}
